name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published]

env:
  NODE_VERSION: '20.x'
  REGISTRY_URL: 'https://registry.npmjs.org'

jobs:
  test:
    name: Test & Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: ${{ env.REGISTRY_URL }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting and formatting checks
        run: |
          npm run format:check || echo "⚠️  Code formatting issues found"
          
      - name: Build package
        run: npm run build

      - name: Run basic tests
        run: npm test

      - name: Run enhanced test suite
        run: npm run test:enhanced

      - name: Check bundle sizes
        run: |
          INDEX_SIZE=$(stat -c%s "index.js")
          WITHOUT_COUNTRIES_SIZE=$(stat -c%s "without-countries.js")
          echo "📦 Bundle Sizes:"
          echo "  - index.js: $(($INDEX_SIZE / 1024))KB"
          echo "  - without-countries.js: $(($WITHOUT_COUNTRIES_SIZE / 1024))KB"
          
          if [ $INDEX_SIZE -gt 300000 ]; then
            echo "⚠️  WARNING: index.js is larger than 300KB"
          fi
          
          if [ $WITHOUT_COUNTRIES_SIZE -gt 5000 ]; then
            echo "⚠️  WARNING: without-countries.js is larger than 5KB"
          fi

      - name: Test package exports
        run: |
          node -e "
            const DottedMap = require('./index').default;
            const { getMapJSON } = require('./index');
            const DottedMapWithoutCountries = require('./without-countries').default;
            console.log('✅ All package exports working correctly');
          "

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            index.js
            without-countries.js
            index.d.ts
            without-countries.d.ts

  publish-npm:
    name: Publish to NPM
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: ${{ env.REGISTRY_URL }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create deployment summary
        run: |
          echo "🚀 **Package Published Successfully!**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Package**: @setkernel/dotted-map-next" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: $(node -p "require('./package.json').version")" >> $GITHUB_STEP_SUMMARY
          echo "- **NPM**: https://www.npmjs.com/package/@setkernel/dotted-map-next" >> $GITHUB_STEP_SUMMARY
          echo "- **Install**: \`npm install @setkernel/dotted-map-next\`" >> $GITHUB_STEP_SUMMARY

  publish-github:
    name: Publish to GitHub Packages
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://npm.pkg.github.com'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Publish to GitHub Packages
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  auto-merge-dependabot:
    name: Auto-merge Dependabot PRs
    runs-on: ubuntu-latest
    needs: test
    if: github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'
    steps:
      - name: Enable auto-merge for Dependabot PRs
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
